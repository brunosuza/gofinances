{"ast":null,"code":"import Dimensions from \"../Dimensions\";\nimport canUseDOM from \"../../modules/canUseDom\";\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;","map":{"version":3,"sources":["C:/Users/Bruno/Documents/rocketseat/react-native/gofinances/node_modules/react-native-web/dist/exports/DeviceInfo/index.js"],"names":["Dimensions","canUseDOM","DeviceInfo","windowPhysicalPixels","_Dimensions$get","get","width","height","fontScale","scale","screenPhysicalPixels","_Dimensions$get2","locale","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent"],"mappings":"AAQA,OAAOA,UAAP;AACA,OAAOC,SAAP;AACA,IAAIC,UAAU,GAAG;AACfF,EAAAA,UAAU,EAAE;AACV,QAAIG,oBAAJ,GAA2B;AACzB,UAAIC,eAAe,GAAGJ,UAAU,CAACK,GAAX,CAAe,QAAf,CAAtB;AAAA,UACIC,KAAK,GAAGF,eAAe,CAACE,KAD5B;AAAA,UAEIC,MAAM,GAAGH,eAAe,CAACG,MAF7B;AAAA,UAGIC,SAAS,GAAGJ,eAAe,CAACI,SAHhC;AAAA,UAIIC,KAAK,GAAGL,eAAe,CAACK,KAJ5B;;AAMA,aAAO;AACLH,QAAAA,KAAK,EAAEA,KAAK,GAAGG,KADV;AAELF,QAAAA,MAAM,EAAEA,MAAM,GAAGE,KAFZ;AAGLA,QAAAA,KAAK,EAALA,KAHK;AAILD,QAAAA,SAAS,EAATA;AAJK,OAAP;AAMD,KAdS;;AAgBV,QAAIE,oBAAJ,GAA2B;AACzB,UAAIC,gBAAgB,GAAGX,UAAU,CAACK,GAAX,CAAe,QAAf,CAAvB;AAAA,UACIC,KAAK,GAAGK,gBAAgB,CAACL,KAD7B;AAAA,UAEIC,MAAM,GAAGI,gBAAgB,CAACJ,MAF9B;AAAA,UAGIC,SAAS,GAAGG,gBAAgB,CAACH,SAHjC;AAAA,UAIIC,KAAK,GAAGE,gBAAgB,CAACF,KAJ7B;;AAMA,aAAO;AACLH,QAAAA,KAAK,EAAEA,KAAK,GAAGG,KADV;AAELF,QAAAA,MAAM,EAAEA,MAAM,GAAGE,KAFZ;AAGLA,QAAAA,KAAK,EAALA,KAHK;AAILD,QAAAA,SAAS,EAATA;AAJK,OAAP;AAMD;;AA7BS,GADG;;AAkCf,MAAII,MAAJ,GAAa;AACX,QAAIX,SAAJ,EAAe;AACb,UAAIY,SAAS,CAACC,SAAd,EAAyB;AACvB,eAAOD,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAP;AACD,OAFD,MAEO;AACL,eAAOD,SAAS,CAACE,QAAjB;AACD;AACF;AACF,GA1Cc;;AA4Cf,MAAIC,WAAJ,GAAkB;AAEhB,WAAOf,SAAS,GAAGY,SAAS,CAACI,YAAb,GAA4BC,SAA5C;AACD,GA/Cc;;AAiDf,MAAIC,SAAJ,GAAgB;AACd,WAAOlB,SAAS,GAAGY,SAAS,CAACM,SAAb,GAAyB,EAAzC;AACD;;AAnDc,CAAjB;AAsDA,eAAejB,UAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../Dimensions';\nimport canUseDOM from '../../modules/canUseDom';\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;"]},"metadata":{},"sourceType":"module"}