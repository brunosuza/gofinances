{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { RFValue } from 'react-native-responsive-fontsize';\nimport styled, { css } from 'styled-components/native';\nimport { Feather } from '@expo/vector-icons';\nexport var Container = styled(TouchableOpacity)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    width: 48%;\\n\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n\\n    border-width: \", \"px;\\n    border-style: solid;\\n    border-color: \", \";\\n    border-radius: 5px;\\n\\n    padding: 16px;\\n\\n    \", \";\\n\\n    \", \";\\n \"])), function (_ref) {\n  var isActive = _ref.isActive;\n  return isActive ? 0 : 1.5;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.colors.text;\n}, function (_ref3) {\n  var isActive = _ref3.isActive,\n      type = _ref3.type;\n  return isActive && type === 'up' && css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n        background-color:  \", \";\\n    \"])), function (_ref4) {\n    var theme = _ref4.theme;\n    return theme.colors.success_light;\n  });\n}, function (_ref5) {\n  var isActive = _ref5.isActive,\n      type = _ref5.type;\n  return isActive && type === 'down' && css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n        background-color:  \", \";\\n    \"])), function (_ref6) {\n    var theme = _ref6.theme;\n    return theme.colors.attention_light;\n  });\n});\nexport var Title = styled.Text(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n    font-family: \", \";\\n    margin-right: 12px;\\n\"])), function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.fonts.regular;\n});\nexport var Icon = styled(Feather)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n    font-size: \", \"px;\\n    margin-right: 12px;\\n\\n    color: \", \"\\n\"])), RFValue(24), function (_ref8) {\n  var theme = _ref8.theme,\n      type = _ref8.type;\n  return type === 'up' ? theme.colors.success : theme.colors.attention;\n});","map":{"version":3,"sources":["C:/Users/Bruno/Documents/rocketseat/react-native/gofinances/src/components/Forms/TransactionTypeButton/styles.ts"],"names":["RFValue","styled","css","Feather","Container","TouchableOpacity","isActive","theme","colors","text","type","success_light","attention_light","Title","Text","fonts","regular","Icon","success","attention"],"mappings":";;;;;AACA,SAASA,OAAT,QAAwB,kCAAxB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,0BAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAYC,OAAO,IAAMC,SAAS,GAAGH,MAAM,CAACI,gBAAD,CAAT,4UAOH;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAkBA,QAAQ,GAAG,CAAH,GAAO,GAAjC;AAAA,CAPG,EASH;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,IAA5B;AAAA,CATG,EAcjB;AAAA,MAAGH,QAAH,SAAGA,QAAH;AAAA,MAAaI,IAAb,SAAaA,IAAb;AAAA,SAAuBJ,QAAQ,IAAII,IAAI,KAAK,IAArB,IAA6BR,GAA7B,qHACA;AAAA,QAAGK,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,MAAN,CAAaG,aAA5B;AAAA,GADA,CAAvB;AAAA,CAdiB,EAkBjB;AAAA,MAAGL,QAAH,SAAGA,QAAH;AAAA,MAAaI,IAAb,SAAaA,IAAb;AAAA,SAAuBJ,QAAQ,IAAII,IAAI,KAAK,MAArB,IAA+BR,GAA/B,qHACA;AAAA,QAAGK,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,MAAN,CAAaI,eAA5B;AAAA,GADA,CAAvB;AAAA,CAlBiB,CAAf;AAuBR,OAAO,IAAMC,KAAK,GAAGZ,MAAM,CAACa,IAAV,gIACC;AAAA,MAAGP,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACQ,KAAN,CAAYC,OAA3B;AAAA,CADD,CAAX;AAKP,OAAO,IAAMC,IAAI,GAAGhB,MAAM,CAACE,OAAD,CAAT,mJACAH,OAAO,CAAC,EAAD,CADP,EAIJ;AAAA,MAAGO,KAAH,SAAGA,KAAH;AAAA,MAAUG,IAAV,SAAUA,IAAV;AAAA,SAAqBA,IAAI,KAAK,IAAT,GAC1BH,KAAK,CAACC,MAAN,CAAaU,OADa,GACHX,KAAK,CAACC,MAAN,CAAaW,SAD/B;AAAA,CAJI,CAAV","sourcesContent":["import { TouchableOpacity } from 'react-native';\r\nimport { RFValue } from 'react-native-responsive-fontsize';\r\nimport styled, { css } from 'styled-components/native';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\ninterface IconProps {\r\n    type: 'up' | 'down';\r\n    isActive: boolean;\r\n}\r\n\r\ninterface ContainerProps {\r\n    type: 'up' | 'down';\r\n    isActive: boolean;\r\n}\r\n\r\n export const Container = styled(TouchableOpacity)<ContainerProps>`\r\n    width: 48%;\r\n\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    border-width: ${({ isActive }) => isActive ? 0 : 1.5}px;\r\n    border-style: solid;\r\n    border-color: ${({ theme }) => theme.colors.text};\r\n    border-radius: 5px;\r\n\r\n    padding: 16px;\r\n\r\n    ${({ isActive, type}) => isActive && type === 'up' && css`\r\n        background-color:  ${({ theme }) => theme.colors.success_light};\r\n    `};\r\n\r\n    ${({ isActive, type}) => isActive && type === 'down' && css`\r\n        background-color:  ${({ theme }) => theme.colors.attention_light};\r\n    `};\r\n `;\r\n\r\nexport const Title = styled.Text`\r\n    font-family: ${({ theme }) => theme.fonts.regular};\r\n    margin-right: 12px;\r\n`;\r\n\r\nexport const Icon = styled(Feather)<IconProps>`\r\n    font-size: ${RFValue(24)}px;\r\n    margin-right: 12px;\r\n\r\n    color: ${({ theme, type }) => type === 'up' ?\r\n        theme.colors.success : theme.colors.attention\r\n    }\r\n`;"]},"metadata":{},"sourceType":"module"}