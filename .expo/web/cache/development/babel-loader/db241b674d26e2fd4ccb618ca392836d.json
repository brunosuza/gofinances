{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"color\", \"indeterminate\", \"progress\", \"trackColor\", \"style\"];\nimport * as React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nvar ProgressBar = React.forwardRef(function (props, ref) {\n  var _props$color = props.color,\n      color = _props$color === void 0 ? '#1976D2' : _props$color,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$progress = props.progress,\n      progress = _props$progress === void 0 ? 0 : _props$progress,\n      _props$trackColor = props.trackColor,\n      trackColor = _props$trackColor === void 0 ? 'transparent' : _props$trackColor,\n      style = props.style,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var percentageProgress = progress * 100;\n  var width = indeterminate ? '25%' : percentageProgress + \"%\";\n  return React.createElement(View, _extends({}, other, {\n    accessibilityRole: \"progressbar\",\n    accessibilityValueMax: 100,\n    accessibilityValueMin: 0,\n    accessibilityValueNow: indeterminate ? null : percentageProgress,\n    ref: ref,\n    style: [styles.track, style, {\n      backgroundColor: trackColor\n    }]\n  }), React.createElement(View, {\n    style: [{\n      backgroundColor: color,\n      width: width\n    }, styles.progress, indeterminate && styles.animation]\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nvar styles = StyleSheet.create({\n  track: {\n    forcedColorAdjust: 'none',\n    height: 5,\n    overflow: 'hidden',\n    userSelect: 'none',\n    zIndex: 0\n  },\n  progress: {\n    forcedColorAdjust: 'none',\n    height: '100%',\n    zIndex: -1\n  },\n  animation: {\n    animationDuration: '1s',\n    animationKeyframes: [{\n      '0%': {\n        transform: [{\n          translateX: '-100%'\n        }]\n      },\n      '100%': {\n        transform: [{\n          translateX: '400%'\n        }]\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  }\n});\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/Bruno/Documents/rocketseat/react-native/gofinances/node_modules/react-native-web/dist/exports/ProgressBar/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","StyleSheet","View","ProgressBar","forwardRef","props","ref","_props$color","color","_props$indeterminate","indeterminate","_props$progress","progress","_props$trackColor","trackColor","style","other","percentageProgress","width","createElement","accessibilityRole","accessibilityValueMax","accessibilityValueMin","accessibilityValueNow","styles","track","backgroundColor","animation","displayName","create","forcedColorAdjust","height","overflow","userSelect","zIndex","animationDuration","animationKeyframes","transform","translateX","animationTimingFunction","animationIterationCount"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"color\", \"indeterminate\", \"progress\", \"trackColor\", \"style\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nvar ProgressBar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _props$color = props.color,\n      color = _props$color === void 0 ? '#1976D2' : _props$color,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$progress = props.progress,\n      progress = _props$progress === void 0 ? 0 : _props$progress,\n      _props$trackColor = props.trackColor,\n      trackColor = _props$trackColor === void 0 ? 'transparent' : _props$trackColor,\n      style = props.style,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var percentageProgress = progress * 100;\n  var width = indeterminate ? '25%' : percentageProgress + \"%\";\n  return /*#__PURE__*/React.createElement(View, _extends({}, other, {\n    accessibilityRole: \"progressbar\",\n    accessibilityValueMax: 100,\n    accessibilityValueMin: 0,\n    accessibilityValueNow: indeterminate ? null : percentageProgress,\n    ref: ref,\n    style: [styles.track, style, {\n      backgroundColor: trackColor\n    }]\n  }), /*#__PURE__*/React.createElement(View, {\n    style: [{\n      backgroundColor: color,\n      width\n    }, styles.progress, indeterminate && styles.animation]\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nvar styles = StyleSheet.create({\n  track: {\n    forcedColorAdjust: 'none',\n    height: 5,\n    overflow: 'hidden',\n    userSelect: 'none',\n    zIndex: 0\n  },\n  progress: {\n    forcedColorAdjust: 'none',\n    height: '100%',\n    zIndex: -1\n  },\n  animation: {\n    animationDuration: '1s',\n    animationKeyframes: [{\n      '0%': {\n        transform: [{\n          translateX: '-100%'\n        }]\n      },\n      '100%': {\n        transform: [{\n          translateX: '400%'\n        }]\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  }\n});\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}