{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"enabled\", \"onValueChange\", \"selectedValue\", \"style\", \"testID\", \"itemStyle\", \"mode\", \"prompt\"];\nimport * as React from 'react';\nimport createElement from \"../createElement\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../modules/usePlatformMethods\";\nimport PickerItem from \"./PickerItem\";\nimport StyleSheet from \"../StyleSheet\";\nvar Picker = React.forwardRef(function (props, forwardedRef) {\n  var children = props.children,\n      enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      style = props.style,\n      testID = props.testID,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hostRef = React.useRef(null);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }\n\n  var supportedProps = _objectSpread({\n    children: children,\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    style: [styles.initial, style],\n    testID: testID,\n    value: selectedValue\n  }, other);\n\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement('select', supportedProps);\n});\nPicker.Item = PickerItem;\nvar styles = StyleSheet.create({\n  initial: {\n    fontFamily: 'System',\n    fontSize: 'inherit',\n    margin: 0\n  }\n});\nexport default Picker;","map":{"version":3,"sources":["C:/Users/Bruno/Documents/rocketseat/react-native/gofinances/node_modules/react-native-web/dist/exports/Picker/index.js"],"names":["_objectSpread","_objectWithoutPropertiesLoose","_excluded","React","createElement","useMergeRefs","usePlatformMethods","PickerItem","StyleSheet","Picker","forwardRef","props","forwardedRef","children","enabled","onValueChange","selectedValue","style","testID","itemStyle","mode","prompt","other","hostRef","useRef","handleChange","e","_e$target","target","selectedIndex","value","supportedProps","disabled","undefined","onChange","styles","initial","platformMethodsRef","setRef","ref","Item","create","fontFamily","fontSize","margin"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sCAA1B;AACA,OAAOC,6BAAP,MAA0C,qDAA1C;AACA,IAAIC,SAAS,GAAG,CAAC,UAAD,EAAa,SAAb,EAAwB,eAAxB,EAAyC,eAAzC,EAA0D,OAA1D,EAAmE,QAAnE,EAA6E,WAA7E,EAA0F,MAA1F,EAAkG,QAAlG,CAAhB;AAWA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,IAAIC,MAAM,GAAgBN,KAAK,CAACO,UAAN,CAAiB,UAACC,KAAD,EAAQC,YAAR,EAAyB;AAClE,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MACIC,OAAO,GAAGH,KAAK,CAACG,OADpB;AAAA,MAEIC,aAAa,GAAGJ,KAAK,CAACI,aAF1B;AAAA,MAGIC,aAAa,GAAGL,KAAK,CAACK,aAH1B;AAAA,MAIIC,KAAK,GAAGN,KAAK,CAACM,KAJlB;AAAA,MAKIC,MAAM,GAAGP,KAAK,CAACO,MALnB;AAAA,MAMIC,SAAS,GAAGR,KAAK,CAACQ,SANtB;AAAA,MAOIC,IAAI,GAAGT,KAAK,CAACS,IAPjB;AAAA,MAQIC,MAAM,GAAGV,KAAK,CAACU,MARnB;AAAA,MASIC,KAAK,GAAGrB,6BAA6B,CAACU,KAAD,EAAQT,SAAR,CATzC;;AAWA,MAAIqB,OAAO,GAAGpB,KAAK,CAACqB,MAAN,CAAa,IAAb,CAAd;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAlB;AAAA,QACIC,aAAa,GAAGF,SAAS,CAACE,aAD9B;AAAA,QAEIC,KAAK,GAAGH,SAAS,CAACG,KAFtB;;AAIA,QAAIf,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACe,KAAD,EAAQD,aAAR,CAAb;AACD;AACF;;AAGD,MAAIE,cAAc,GAAG/B,aAAa,CAAC;AACjCa,IAAAA,QAAQ,EAARA,QADiC;AAEjCmB,IAAAA,QAAQ,EAAElB,OAAO,KAAK,KAAZ,GAAoB,IAApB,GAA2BmB,SAFJ;AAGjCC,IAAAA,QAAQ,EAAET,YAHuB;AAIjCR,IAAAA,KAAK,EAAE,CAACkB,MAAM,CAACC,OAAR,EAAiBnB,KAAjB,CAJ0B;AAKjCC,IAAAA,MAAM,EAANA,MALiC;AAMjCY,IAAAA,KAAK,EAAEd;AAN0B,GAAD,EAO/BM,KAP+B,CAAlC;;AASA,MAAIe,kBAAkB,GAAG/B,kBAAkB,CAACyB,cAAD,CAA3C;AACA,MAAIO,MAAM,GAAGjC,YAAY,CAACkB,OAAD,EAAUc,kBAAV,EAA8BzB,YAA9B,CAAzB;AACAmB,EAAAA,cAAc,CAACQ,GAAf,GAAqBD,MAArB;AACA,SAAOlC,aAAa,CAAC,QAAD,EAAW2B,cAAX,CAApB;AACD,CAtCyB,CAA1B;AAwCAtB,MAAM,CAAC+B,IAAP,GAAcjC,UAAd;AACA,IAAI4B,MAAM,GAAG3B,UAAU,CAACiC,MAAX,CAAkB;AAC7BL,EAAAA,OAAO,EAAE;AACPM,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,QAAQ,EAAE,SAFH;AAGPC,IAAAA,MAAM,EAAE;AAHD;AADoB,CAAlB,CAAb;AAOA,eAAenC,MAAf","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"enabled\", \"onValueChange\", \"selectedValue\", \"style\", \"testID\", \"itemStyle\", \"mode\", \"prompt\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport PickerItem from './PickerItem';\nimport StyleSheet from '../StyleSheet';\nvar Picker = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var children = props.children,\n      enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      style = props.style,\n      testID = props.testID,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hostRef = React.useRef(null);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  } // $FlowFixMe\n\n\n  var supportedProps = _objectSpread({\n    children,\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    style: [styles.initial, style],\n    testID,\n    value: selectedValue\n  }, other);\n\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement('select', supportedProps);\n}); // $FlowFixMe\n\nPicker.Item = PickerItem;\nvar styles = StyleSheet.create({\n  initial: {\n    fontFamily: 'System',\n    fontSize: 'inherit',\n    margin: 0\n  }\n});\nexport default Picker;"]},"metadata":{},"sourceType":"module"}