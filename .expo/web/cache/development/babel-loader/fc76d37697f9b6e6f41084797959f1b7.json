{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"type\", \"title\", \"isActive\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Container, Icon, Title } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar icons = {\n  up: 'arrow-up-circle',\n  down: 'arrow-down-circle'\n};\nexport function TransactionTypeButton(_ref) {\n  var type = _ref.type,\n      title = _ref.title,\n      isActive = _ref.isActive,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsxs(Container, _objectSpread(_objectSpread({\n    isActive: isActive,\n    type: type\n  }, rest), {}, {\n    children: [_jsx(Icon, {\n      name: icons[type],\n      type: type\n    }), _jsx(Title, {\n      children: title\n    })]\n  }));\n}","map":{"version":3,"sources":["C:/Users/Bruno/Documents/rocketseat/react-native/gofinances/src/components/Forms/TransactionTypeButton/index.tsx"],"names":["React","Container","Icon","Title","icons","up","down","TransactionTypeButton","type","title","isActive","rest"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,KAHJ;;;AAMA,IAAMC,KAAK,GAAG;AACVC,EAAAA,EAAE,EAAE,iBADM;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAd;AAWA,OAAO,SAASC,qBAAT,OAKG;AAAA,MAJNC,IAIM,QAJNA,IAIM;AAAA,MAHNC,KAGM,QAHNA,KAGM;AAAA,MAFNC,QAEM,QAFNA,QAEM;AAAA,MADHC,IACG;;AACN,SACI,MAAC,SAAD;AACK,IAAA,QAAQ,EAAED,QADf;AAEK,IAAA,IAAI,EAAEF;AAFX,KAGSG,IAHT;AAAA,eAKG,KAAC,IAAD;AACK,MAAA,IAAI,EAAEP,KAAK,CAACI,IAAD,CADhB;AAEK,MAAA,IAAI,EAAEA;AAFX,MALH,EASG,KAAC,KAAD;AAAA,gBACMC;AADN,MATH;AAAA,KADJ;AAeH","sourcesContent":["import React from 'react';\r\nimport { TouchableOpacityProps } from 'react-native';\r\n\r\nimport { \r\n    Container,\r\n    Icon,\r\n    Title\r\n } from './styles';\r\n\r\nconst icons = {\r\n    up: 'arrow-up-circle',\r\n    down: 'arrow-down-circle'\r\n};\r\n\r\ninterface Props extends TouchableOpacityProps {\r\n    title: string;\r\n    type: 'up' | 'down';\r\n    isActive: boolean;\r\n}\r\n\r\nexport function TransactionTypeButton({\r\n    type,\r\n    title,\r\n    isActive,\r\n    ...rest\r\n}: Props) {\r\n    return (\r\n        <Container\r\n             isActive={isActive}\r\n             type={type}\r\n             {...rest}\r\n        >\r\n           <Icon \r\n                name={icons[type]} \r\n                type={type}\r\n            />\r\n           <Title>\r\n                {title}\r\n           </Title>\r\n        </Container>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}